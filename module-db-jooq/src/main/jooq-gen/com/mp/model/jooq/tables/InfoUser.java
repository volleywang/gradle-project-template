/*
 * This file is generated by jOOQ.
*/
package com.mp.model.jooq.tables;


import com.mp.model.jooq.Keys;
import com.mp.model.jooq.Testdb;
import com.mp.model.jooq.tables.records.InfoUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfoUser extends TableImpl<InfoUserRecord> {

    private static final long serialVersionUID = -523157015;

    /**
     * The reference instance of <code>testdb.info_user</code>
     */
    public static final InfoUser INFO_USER = new InfoUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InfoUserRecord> getRecordType() {
        return InfoUserRecord.class;
    }

    /**
     * The column <code>testdb.info_user.user_id</code>.
     */
    public final TableField<InfoUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>testdb.info_user.user_name</code>.
     */
    public final TableField<InfoUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>testdb.info_user.nick_name</code>.
     */
    public final TableField<InfoUserRecord, String> NICK_NAME = createField("nick_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>testdb.info_user.first_name</code>.
     */
    public final TableField<InfoUserRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>testdb.info_user.last_name</code>.
     */
    public final TableField<InfoUserRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>testdb.info_user.email</code>.
     */
    public final TableField<InfoUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>testdb.info_user.mobile_number</code>.
     */
    public final TableField<InfoUserRecord, String> MOBILE_NUMBER = createField("mobile_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>testdb.info_user</code> table reference
     */
    public InfoUser() {
        this("info_user", null);
    }

    /**
     * Create an aliased <code>testdb.info_user</code> table reference
     */
    public InfoUser(String alias) {
        this(alias, INFO_USER);
    }

    private InfoUser(String alias, Table<InfoUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private InfoUser(String alias, Table<InfoUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Testdb.TESTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InfoUserRecord> getPrimaryKey() {
        return Keys.KEY_INFO_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InfoUserRecord>> getKeys() {
        return Arrays.<UniqueKey<InfoUserRecord>>asList(Keys.KEY_INFO_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InfoUser as(String alias) {
        return new InfoUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InfoUser rename(String name) {
        return new InfoUser(name, null);
    }
}
