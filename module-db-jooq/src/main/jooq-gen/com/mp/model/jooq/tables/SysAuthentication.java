/*
 * This file is generated by jOOQ.
*/
package com.mp.model.jooq.tables;


import com.mp.model.jooq.Keys;
import com.mp.model.jooq.Testdb;
import com.mp.model.jooq.tables.records.SysAuthenticationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysAuthentication extends TableImpl<SysAuthenticationRecord> {

    private static final long serialVersionUID = 1573925736;

    /**
     * The reference instance of <code>testdb.sys_authentication</code>
     */
    public static final SysAuthentication SYS_AUTHENTICATION = new SysAuthentication();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysAuthenticationRecord> getRecordType() {
        return SysAuthenticationRecord.class;
    }

    /**
     * The column <code>testdb.sys_authentication.auth_id</code>.
     */
    public final TableField<SysAuthenticationRecord, Integer> AUTH_ID = createField("auth_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>testdb.sys_authentication.auth_code</code>.
     */
    public final TableField<SysAuthenticationRecord, String> AUTH_CODE = createField("auth_code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>testdb.sys_authentication.password</code>.
     */
    public final TableField<SysAuthenticationRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>testdb.sys_authentication</code> table reference
     */
    public SysAuthentication() {
        this("sys_authentication", null);
    }

    /**
     * Create an aliased <code>testdb.sys_authentication</code> table reference
     */
    public SysAuthentication(String alias) {
        this(alias, SYS_AUTHENTICATION);
    }

    private SysAuthentication(String alias, Table<SysAuthenticationRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysAuthentication(String alias, Table<SysAuthenticationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Testdb.TESTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysAuthenticationRecord> getPrimaryKey() {
        return Keys.KEY_SYS_AUTHENTICATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysAuthenticationRecord>> getKeys() {
        return Arrays.<UniqueKey<SysAuthenticationRecord>>asList(Keys.KEY_SYS_AUTHENTICATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysAuthentication as(String alias) {
        return new SysAuthentication(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysAuthentication rename(String name) {
        return new SysAuthentication(name, null);
    }
}
